[{"/Users/parvejmallick/Projects/ReactJS/weatherpp/src/service/Api.js":"1","/Users/parvejmallick/Projects/ReactJS/weatherpp/src/Weather.js":"2","/Users/parvejmallick/Projects/ReactJS/weatherpp/src/App.js":"3","/Users/parvejmallick/Projects/ReactJS/weatherpp/src/service/Helper.js":"4","/Users/parvejmallick/Projects/ReactJS/weatherpp/src/reportWebVitals.js":"5","/Users/parvejmallick/Projects/ReactJS/weatherpp/src/index.js":"6"},{"size":198,"mtime":1611924193238,"results":"7","hashOfConfig":"8"},{"size":5346,"mtime":1611981065525,"results":"9","hashOfConfig":"8"},{"size":2337,"mtime":1611940127312,"results":"10","hashOfConfig":"8"},{"size":620,"mtime":1611934169821,"results":"11","hashOfConfig":"8"},{"size":362,"mtime":1611921921868,"results":"12","hashOfConfig":"8"},{"size":500,"mtime":1611921921864,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1tmhjbz",{"filePath":"16","messages":"17","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20","usedDeprecatedRules":"21"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/parvejmallick/Projects/ReactJS/weatherpp/src/service/Api.js",[],"/Users/parvejmallick/Projects/ReactJS/weatherpp/src/Weather.js",["29"],"/Users/parvejmallick/Projects/ReactJS/weatherpp/src/App.js",["30"],"import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { geolocated } from \"react-geolocated\";\nimport Weather from './Weather';\n\nclass App extends React.Component{\n\n  constructor(props) {\n    super(props);\n    this.state = { city: \"\", showWeatherByCity: false};\n  }\n\n  getByCity = () => {\n    this.setState({ showWeatherByCity: true });\n  }\n\n  render(){\n  return (\n      !this.props.isGeolocationAvailable ? (\n        <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'center'}}>\n          <p>Your browser does not support Geolocation</p>\n\n          <div style={{marginTop: 50, alignItems: 'center', justifyContent: 'center', flexDirection: 'column'}}>\n            <input type=\"text\" name=\"name\" onChange={event => this.setState({ city: event.target.value })} placeholder=\"Enter City Name\"/>\n            <input type=\"submit\" value=\"Submit\" onClick={() => this.getByCity()}/>\n          </div>\n\n        </div>\n      ) : !this.props.isGeolocationEnabled && !this.state.showWeatherByCity ? (\n        <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'center', flexDirection: 'column'}}>\n          <p>Geolocation is not enabled</p>\n\n          <div style={{marginTop: 50, alignItems: 'center', justifyContent: 'center', flexDirection: 'column'}}>\n            <input type=\"text\" name=\"name\" onChange={event => this.setState({ city: event.target.value })} placeholder=\"Enter City Name\"/>\n            <input type=\"submit\" value=\"Submit\" onClick={() => this.getByCity()}/>\n          </div>\n          \n        </div>\n      ) : this.props.coords || this.state.showWeatherByCity ? (\n          <div className=\"App\" style={{ display: 'flex', alignItems: 'center', justifyContent: 'center'}}>\n            {/* <p>{this.props.coords.latitude}</p> */}\n            <Weather latitude={this.props.coords ? this.props.coords.latitude : null} longitude={this.props.coords ? this.props.coords.longitude : null} city={this.state.city}/>\n          </div>\n      ) : (\n        <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'center'}}>\n          <p>Getting current location &hellip; </p> \n        </div>\n      )\n  );\n  \n  }\n}\n\n// export default App;\n\nexport default geolocated({\n  positionOptions: {\n      enableHighAccuracy: false,\n  },\n  userDecisionTimeout: 5000,\n})(App);\n",["31","32"],"/Users/parvejmallick/Projects/ReactJS/weatherpp/src/service/Helper.js",["33","34"],"\nexport default class Helper {\n\n    static day = (dateString, i) => {\n        var dayName;\n        if(i == 0){\n            dayName = \"Today\";\n        }else if(i == 1){\n            dayName = \"Tommorow\";\n        }else {\n            var days = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n            var d = new Date(dateString);\n            dayName = days[d.getDay()];\n        }\n        return dayName;\n    }\n\n    static getTemp = (temp, celsius) => {\n        if(celsius){\n            return temp;\n        }else{\n            return (temp * (9 / 5) + 32).toFixed(1);\n        }\n    }\n\t\n}\n","/Users/parvejmallick/Projects/ReactJS/weatherpp/src/reportWebVitals.js",[],"/Users/parvejmallick/Projects/ReactJS/weatherpp/src/index.js",[],{"ruleId":"35","severity":1,"message":"36","line":2,"column":8,"nodeType":"37","messageId":"38","endLine":2,"endColumn":12},{"ruleId":"35","severity":1,"message":"36","line":2,"column":8,"nodeType":"37","messageId":"38","endLine":2,"endColumn":12},{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","severity":1,"message":"44","line":6,"column":14,"nodeType":"45","messageId":"46","endLine":6,"endColumn":16},{"ruleId":"43","severity":1,"message":"44","line":8,"column":20,"nodeType":"45","messageId":"46","endLine":8,"endColumn":22},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","no-native-reassign",["47"],"no-negated-in-lhs",["48"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]